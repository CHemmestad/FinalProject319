{"ast":null,"code":"var _jsxFileName = \"/Users/caleb/Desktop/SE 319/A20/Frontend/src/Contacts.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Contacts = ({\n  contacts,\n  setContacts\n}) => {\n  _s();\n  const [messages, setMessages] = useState({}); // Store messages by contactId\n  useEffect(() => {\n    const fetchMessages = async contactId => {\n      try {\n        const response = await fetch(`http://localhost:8081/contact/messages/`);\n        if (!response.ok) {\n          const errorMessage = await response.json();\n          throw new Error(`Failed to fetch messages: ${errorMessage.error}`);\n        }\n        const data = await response.json();\n        // Store messages for this contact\n        setMessages(data);\n      } catch (err) {\n        alert(\"Error fetching messages: \" + err);\n      }\n    };\n    fetchMessages();\n    const fetchContacts = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8081/contact\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch contacts\");\n        }\n        const data = await response.json();\n        setContacts(data);\n      } catch (error) {\n        alert(\"There was an Error loading contacts \" + error);\n      }\n    };\n    fetchContacts();\n    console.log(messages);\n  }, []);\n  return contacts.map(contact => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"list-group-item d-flex align-items-center\",\n    children: [contact.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `http://localhost:8081${contact.image_url}`,\n      alt: contact.contact_name,\n      style: {\n        width: '50px',\n        height: '50px',\n        marginRight: '15px',\n        objectFit: 'cover'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: contact.contact_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), \" - \", contact.phone_number, /*#__PURE__*/_jsxDEV(\"p\", {\n        children: contact.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), messages[contact.id] && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group mt-2\",\n        children: messages[contact.id].map(msg => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"list-group-item\",\n          children: [msg.message, \" \", /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"text-muted\",\n            children: [\"(\", msg.message_timestamp, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 51\n          }, this)]\n        }, msg.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)]\n  }, contact.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this));\n};\n_s(Contacts, \"Pc3xIb107nUA4gS60UTTAJZW5js=\");\n_c = Contacts;\nexport default Contacts;\nvar _c;\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Contacts","contacts","setContacts","_s","messages","setMessages","fetchMessages","contactId","response","fetch","ok","errorMessage","json","Error","error","data","err","alert","fetchContacts","console","log","map","contact","className","children","image_url","src","alt","contact_name","style","width","height","marginRight","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","phone_number","message","id","msg","message_timestamp","_c","$RefreshReg$"],"sources":["/Users/caleb/Desktop/SE 319/A20/Frontend/src/Contacts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst Contacts = ({ contacts, setContacts }) => {\n    const [messages, setMessages] = useState({}); // Store messages by contactId\n    useEffect(() => {\n        const fetchMessages = async (contactId) => {\n            try {\n                const response = await fetch(`http://localhost:8081/contact/messages/`);\n                if (!response.ok) {\n                    const errorMessage = await response.json();\n                    throw new Error(`Failed to fetch messages: ${errorMessage.error}`);\n                }\n                const data = await response.json();\n                // Store messages for this contact\n                setMessages(data);\n            } catch (err) {\n                alert(\"Error fetching messages: \" + err);\n            }\n        };\n        fetchMessages();\n        const fetchContacts = async () => {\n            try {\n                const response = await fetch(\"http://localhost:8081/contact\");\n                if (!response.ok) {\n                    throw new Error(\"Failed to fetch contacts\");\n                }\n                const data = await response.json();\n                setContacts(data);\n            } catch (error) {\n                alert(\"There was an Error loading contacts \" + error);\n            }\n        };\n        fetchContacts();\n        console.log(messages);\n    }, []);\n    return (\n        contacts.map((contact) => (\n            <li key={contact.id} className=\"list-group-item d-flex align-items-center\">\n                {contact.image_url && (\n                    <img\n                        src={`http://localhost:8081${contact.image_url}`}\n                        alt={contact.contact_name}\n                        style={{ width: '50px', height: '50px', marginRight: '15px', objectFit: 'cover' }}\n                    />\n                )}\n                <div>\n                    <strong>{contact.contact_name}</strong> - {contact.phone_number}\n                    <p>{contact.message}</p>\n                    {/* Messages List */}\n                    {messages[contact.id] && (\n                        <ul className=\"list-group mt-2\">\n                            {messages[contact.id].map((msg) => (\n                                <li key={msg.id} className=\"list-group-item\">\n                                    {msg.message} <small className=\"text-muted\">({msg.message_timestamp})</small>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </div>\n\n            </li>\n        )));\n}\nexport default Contacts;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}